sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
plot_richness(
control_only_ps,
color="Age_Rounded",
title="Control Only"
)
plot_richness(
gt_80_ps,
color="Case",
title="Age > 80"
)
plot_richness(
gt_80_ps,
color="CaseString",
title="Age > 80"
)
le_80_ps@sam_data
colnames(le_80_ps@sam_data)
le_80_ps@sam_data['CaseString']
le_80_ps@sam_data[,'CaseString']
gt_80_ps@sam_data[,'CaseString']
control_only_ps@sam_data['CaseString']
control_only_ps@sam_data[,'CaseString']
ps
ps@sam_data[,'CaseString']
control_only_filter = PhyseqFilter$new(ps)$filter(variable_value_query="CaseString='Control'")
control_only_filter
control_only_filter@getPS()
control_only_filter$getPS()@sam_data
control_only_filter$getPS()@sam_data[,'CaseString']
amd_only_filter = PhyseqFilter$new(ps)$filter(variable_value_query="CaseString='AMD'")
amd_only_ps = amd_only_filter$getPS()
amd_only_TAT = amd_only_filter$getTaxaAbundanceTable(normalize=T)
control_only_filter = PhyseqFilter$new(ps)$filter(variable_value_query="CaseString='Control'")
control_only_ps = control_only_filter$getPS()
control_only_TAT = control_only_filter$getTaxaAbundanceTable(normalize=T)
gt_80_filter = PhyseqFilter$new(ps)$filter(variable_value_query="Age_Rounded > 80")
gt_80_ps = gt_80_filter$getPS()
gt_80_TAT = gt_80_filter$getTaxaAbundanceTable(normalize=T)
le_80_filter = PhyseqFilter$new(ps)$filter(variable_value_query="Age_Rounded <= 80")
le_80_ps = le_80_filter$getPS()
le_80_TAT = le_80_filter$getTaxaAbundanceTable(normalize=T)
plot_richness(
amd_only_ps,
color="Age_Rounded",
title="AMD Only"
)
plot_richness(
control_only_ps,
color="Age_Rounded",
title="Control Only"
)
plot_richness(
gt_80_ps,
color="CaseString",
title="Age > 80"
)
plot_richness(
le_80_ps,
color="CaseString",
title="Age <= 80"
)
getwd()
if (file.exists("MiSeq_239_Alpha_Diversity.xlsx"))
{
file.remove("MiSeq_239_Alpha_Diversity.xlsx")
}
write.xlsx2(
amd_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_alpha_div,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_alpha_div,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_alpha_div,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_alpha_div,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
getwd()
if (file.exists("MiSeq_239_Alpha_Diversity.xlsx"))
{
file.remove("MiSeq_239_Alpha_Diversity.xlsx")
}
write.xlsx2(
amd_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
gc()
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
if(!is.null(dev.list())) dev.off()
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
# library(dada2)
library(phyloseq)
# library(dplyr)
# library(tidyr)
library(sqldf)
library(ggplot2)
library(xlsx)
options(java.parameters = "-Xmx8000m")
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
gc()
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
options(java.parameters = "-Xmx16000m")
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
gc()
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
### Not needed if run in conda dada2 environment
#} .libPaths(new=c('/home/exacloud/lustre1/teamMicrobiome/conda/envs/dada2/lib/R/library', '/home/exacloud/lustre1/teamMicrobiome/extraR'))
.libPaths(new=c('/home/balter/conda/envs/phyloseq/lib/R/library', '/home/balter/R'))
# .libPaths()
print('Set project-specific paths')
# project_directory = '/home/exacloud/lustre1/teamMicrobiome/LinLab/MiSeq239'
project_directory = '/home/balter/MiSeq239/'
data_directory = file.path(project_directory, 'Data')
results_directory = file.path(project_directory, 'results')
fastq_dir = file.path(project_directory, "RawData/BaseCalls")
sample_metadata_filename = 'map_091917.tsv'
sample_metadata_path = file.path(data_directory, sample_metadata_filename)
MiseqRun =  '239'
setwd(project_directory)
# library(dada2)
library(phyloseq)
# library(dplyr)
# library(tidyr)
library(sqldf)
library(ggplot2)
options(java.parameters = "-Xmx16000m")
library(xlsx)
phyloseq_object_file = file.path(results_directory, 'miseq_239_phyloseq-10-14-2018.RData')
load(phyloseq_object_file)
age_rounded_numeric = sapply(ps@sam_data$Age_Rounded, as.numeric)
ps@sam_data$Age_Rounded = as.factor(age_rounded_numeric)
CaseString = ifelse(ps@sam_data$Case == 0, "AMD", "Control")
ps@sam_data$CaseString = CaseString
ps@sam_data$SampleID = rownames(ps@otu_table)
ps@sam_data = ps@sam_data[,sort(colnames(ps@sam_data))]
ps
source("/home/balter/hyperphylo/PhyseqFilter.R")
amd_only_filter = PhyseqFilter$new(ps)$filter(variable_value_query="CaseString='AMD'")
amd_only_ps = amd_only_filter$getPS()
amd_only_TAT = amd_only_filter$getTaxaAbundanceTable(normalize=T)
control_only_filter = PhyseqFilter$new(ps)$filter(variable_value_query="CaseString='Control'")
control_only_ps = control_only_filter$getPS()
control_only_TAT = control_only_filter$getTaxaAbundanceTable(normalize=T)
gt_80_filter = PhyseqFilter$new(ps)$filter(variable_value_query="Age_Rounded > 80")
gt_80_ps = gt_80_filter$getPS()
gt_80_TAT = gt_80_filter$getTaxaAbundanceTable(normalize=T)
le_80_filter = PhyseqFilter$new(ps)$filter(variable_value_query="Age_Rounded <= 80")
le_80_ps = le_80_filter$getPS()
le_80_TAT = le_80_filter$getTaxaAbundanceTable(normalize=T)
plot_richness(
amd_only_ps,
color="Age_Rounded",
title="AMD Only"
)
plot_richness(
control_only_ps,
color="Age_Rounded",
title="Control Only"
)
plot_richness(
gt_80_ps,
color="CaseString",
title="Age > 80"
)
plot_richness(
le_80_ps,
color="CaseString",
title="Age <= 80"
)
amd_only_alpha_div = estimate_richness(amd_only_ps)
control_only_alpha_div = estimate_richness(control_only_ps)
gt_80_alpha_div = estimate_richness(gt_80_ps)
le_80_alpha_div = estimate_richness(le_80_ps)
getwd()
if (file.exists("MiSeq_239_Alpha_Diversity.xlsx"))
{
file.remove("MiSeq_239_Alpha_Diversity.xlsx")
}
write.xlsx2(
amd_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
control_only_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
gt_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_alpha_div,
file="MiSeq_239_Alpha_Diversity.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
gc()
if (file.exists("MiSeq_239_taxa_abundance.xlsx"))
{
file.remove("MiSeq_239_taxa_abundance.xlsx")
}
gc()
write.xlsx2(
amd_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="AMD Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
control_only_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Control Only",
append=T,
col.names=T,
row.names=T
)
gc()
write.xlsx2(
gt_80_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age > 80",
append=T,
col.names=T,
row.names=T
)
write.xlsx2(
le_80_TAT,
file="MiSeq_239_taxa_abundance.xlsx",
sheetName="Age <= 80",
append=T,
col.names=T,
row.names=T
)
?estimate_richness
source('~/hyperphylo/squaredocstring.R')
install.packages('docstring', lib='/home/balter/R')
